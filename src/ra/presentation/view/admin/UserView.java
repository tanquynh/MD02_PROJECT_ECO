package ra.presentation.view.admin;

import ra.business.model.User;
import ra.business.design.UserDesign;

import java.util.List;

import static ra.business.config.ConsoleColor.*;
import static ra.business.config.InputMethods.getInteger;
import static ra.business.config.InputMethods.getString;
import static ra.business.constant.Constant.Importance.BLOCK;
import static ra.business.constant.Constant.Importance.OPEN;
import static ra.business.constant.Constant.Role.ADMIN;
import static ra.business.constant.Until.formattedPhoneNumber;

public class UserView {
    private UserDesign userDesign;

    public UserView() {
        this.userDesign = new UserDesign();
    }

    public void userManagement() {
        int choice;

        do {
            print(CYAN);

            System.out.println(".--------------------------------------------------------.");
            System.out.println("|           üß°üß°        QU·∫¢N L√ù USER        üß°üß°        |");
            System.out.println("|--------------------------------------------------------|");
            System.out.println("|                     1. DANH S√ÅCH USER                  |");
            System.out.println("|                     2. T√åM KI·∫æM USER THEO T√äN          |");
            System.out.println("|                     3. KH√ìA / M·ªû T√ÄI KHO·∫¢N USER        |");
            System.out.println("|                     4. QUAY L·∫†I MENU TR∆Ø·ªöC             |");
            System.out.println("|                     0. ƒêƒÇNG XU·∫§T                       |");
            System.out.println("'--------------------------------------------------------'\n");
            System.out.println("Nh·∫≠p v√†o l·ª±a ch·ªçn c·ªßa b·∫°n üß°üß° : ");
            choice = getInteger();
            printFinish();

            switch (choice) {
                case 1:
                    displayUserList();
                    break;
                case 2:
                    displayUserByUserName();
                    break;
                case 3:
                    changeUserImportance();
                    break;
                case 4:
                    return;
                case 0:
                    userDesign.logout();
                    break;
                default:
                    break;
            }
        } while (true);
    }
    private void changeUserImportance() {
        System.out.println("H√£y nh·∫≠p username b·∫°n mu·ªën thay ƒë·ªïi tr·∫°ng th√°i:");
        String username = getString();
        User user = userDesign.getUserByUsename(username);
        if (user == null) {
            System.err.println("Kh√¥ng t√¨m th·∫•y username b·∫°n mu·ªën ƒë·ªïi tr·∫°ng th√°i !!\"");

        } else {
            if (user.getRole() == ADMIN) {
                printlnError("Kh√¥ng th·ªÉ kh√≥a user ADMIN !!");
            } else {
                userDesign.updateImportance((user.isImportance() == OPEN ? BLOCK : OPEN), username);
                printlnSuccess("Thay ƒë·ªïi tr·∫°ng th√°i th√†nh c√¥ng!");
            }
        }
    }

    private void displayUserByUserName() {
        System.out.println("Nh·∫≠p v√†o t√™n User c·∫ßn t√¨m ki·∫øm");
        String username = getString();
        List<User> fitterUsers = userDesign.getFitterUsers(username);
        if (fitterUsers.size() != 0) {
            print(GREEN);
            System.out.println("\n                                                  DANH S√ÅCH USER THEO NAME                  ");
            System.out.println("|--------------------------------------------------------------------------------------------------------------------------------|");
            System.out.println("|" + "  ID  |   NAME  |       EMAIL      |     PHONE    |    ƒê·ªäA CH·ªà   |   STATUS  |  ROLE | IMPORTANCE |  CREATE AT  |    UPDATE AT  " + "|");
            System.out.println("|--------------------------------------------------------------------------------------------------------------------------------|");

            for (User user : fitterUsers) {
                System.out.printf("|%-5d | %-7s | %-16s | %-12s | %-12s | %-9s | %-5s | %-10s | %-11s | %-13s |%n",
                        user.getId(), user.getUserName(), user.getEmail(), formattedPhoneNumber(user.getPhone()), user.getAddress(), (user.isStatus() ? "ONLINE" : "OFFLINE"), (user.getRole() == 1 ? "ADMIN" : "USER"), user.isImportance() ? "OPEN" : "BLOCK", user.getCreateAt(), (user.getUpdateAt()) == null ? "Ch∆∞a c·∫≠p nh·∫≠t" : user.getUpdateAt());
            }
            System.out.println("|--------------------------------------------------------------------------------------------------------------------------------|");
            printFinish();
        } else {
            printlnError("Kh√¥ng c√≥ user ph√π h·ª£p!!");

        }
    }

    private void displayUserList() {
        List<User> sortUsers = userDesign.getSortUsersList();
        if (sortUsers.size() != 0) {

            print(GREEN);
            System.out.println("\n                                                   DANH S√ÅCH USER S·∫ÆP X·∫æP THEO NAME                  ");
            System.out.println("|--------------------------------------------------------------------------------------------------------------------------------|");
            System.out.println("|" + "  ID  |   NAME  |       EMAIL      |     PHONE    |    ƒê·ªäA CH·ªà   |   STATUS  |  ROLE | IMPORTANCE |  CREATE AT  |    UPDATE AT  " + "|");
            System.out.println("|--------------------------------------------------------------------------------------------------------------------------------|");

            for (User user : sortUsers) {
                System.out.printf("|%-5d | %-7s | %-16s | %-12s | %-12s | %-9s | %-5s | %-10s | %-11s | %-13s |%n",
                        user.getId(), user.getUserName(), user.getEmail(), formattedPhoneNumber(user.getPhone()), user.getAddress(), (user.isStatus() ? "ONLINE" : "OFFLINE"), (user.getRole() == 1 ? "ADMIN" : "USER"), user.isImportance() ? "OPEN" : "BLOCK", user.getCreateAt(), (user.getUpdateAt()) == null ? "Ch∆∞a c·∫≠p nh·∫≠t" : user.getUpdateAt());
            }
            System.out.println("|--------------------------------------------------------------------------------------------------------------------------------|");
            printFinish();
        } else {
            printlnError("Kh√¥ng c√≥ user !!");

        }

    }
}
